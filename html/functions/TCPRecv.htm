<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Function TCPRecv</title>
  <meta http-equiv="Content-Type" content="text/html; charset=shift_jis">
  <link href="../css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1>Function Reference</h1>
<font size="+1">TCPRecv</font>
<hr size="2">
<p>接続しているソケットからデータを受信します。<br></p>

<p class="codeheader">
TCPRecv ( mainsocket, maxlen [, flag] )<br>
</p>
<p>&nbsp;</p>

<p><b>パラメータ</b></p>
<table border="1" width="100%" cellspacing="0" cellpadding="3" bordercolor="#C0C0C0">
  <tr>
    <td width="15%">mainsocket</td>
    <td width="85%">
	<a href="TCPAccept.htm">TCPAccept</a>、<a href="TCPConnect.htm">TCPConnect</a>関数によって返される接続しているソケットの識別子(ソケットID)</td>
  </tr>
  <tr>
   <td>maxlen</td>
   <td>受信する最大文字数</td>
  </tr>
  <tr>
   <td>flag</td>
   <td><b>[オプション]</b> 1に設定した場合、関数はバイナリデータを返します(デフォルトは0でバイナリ/文字列を自動検知します)。</td>
  </tr>
</table>
<p>&nbsp;</p>

<p><b>返し値</b></p>
<table width="100%">
  <tr>
    <td width="10%" valign="top">成功</td>
    <td width="90%">接続しているソケットから送信されたバイナリ/文字列を返します。</td>
  </tr>
  <tr>
    <td valign="top">失敗</td>
    <td>""を返し、@errorを設定します。</td>
  </tr>
  <tr>
    <td valign="top">@error:</td>
    <td>-1 : ソケットエラー</td>
  </tr>
  <tr>
    <td valign="top"></td>
    <td>WindowsAPIのWSAGetErrorの返し値 (<a href="http://msdn.microsoft.com/en-us/library/ms740668.aspx">MSDN</a>を参照)。</td>
  </tr>
</table>
<p>&nbsp;</p>

<p><b>注意</b></p>
後方互換性のためにこの関数はデフォルトでは文字列を返そうとします。
NULL文字(0x00)を受信した場合、返し値はバイナリ型になります。<br>
関数が常にバイナリデータを返すようにするには"flag"パラメータを1に設定してください(もっとも賢明な方法です)。
<br>
<p>&nbsp;</p>

<p><b>関連</b></p>
<a href="BinaryLen.htm">BinaryLen</a>, <a href="BinaryMid.htm">BinaryMid</a>, <a href="TCPStartup.htm">TCPStartup</a>, <a href="TCPAccept.htm">TCPAccept</a>, <a href="TCPConnect.htm">TCPConnect</a>, <a href="AutoItSetOption.htm#TCPTimeout">TCPTimeout (Option)</a>
<p>&nbsp;</p>

<p><b>例</b></p>
<p class="codebox">
<br>
<span><span class="S11">#include</span><span class="S0"> </span><span class="S7">&lt;GUIConstantsEx.au3&gt;</span><br>
<br>
<span class="S4">Opt</span><span class="S8">(</span><span class="S7">'MustDeclareVars'</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span><br>
<br>
<span class="S1">;==============================================</span><br>
<span class="S1">;==============================================</span><br>
<span class="S1">;サーバー!! 最初に実行!!!!!!!!!!!!!!!</span><br>
<span class="S1">;==============================================</span><br>
<span class="S1">;==============================================</span><br>
<br>
<span class="S0">Example</span><span class="S8">()</span><br>
<br>
<span class="S5">Func</span><span class="S0"> Example</span><span class="S8">()</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; 利用する情報を設定</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; パブリックIPアドレス(@IPAddress1)をここで設定</span><br>
<span class="S1">;&nbsp; &nbsp;Local $szServerPC = @ComputerName</span><br>
<span class="S1">;&nbsp; &nbsp;Local $szIPADDRESS = TCPNameToIP($szServerPC)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$szIPADDRESS</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S6">@IPAddress1</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$nPORT</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S3">33891</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$MainSocket</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$GOOEY</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$edit</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$ConnectedSocket</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$szIP_Accepted</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$msg</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$recv</span><br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; TCPサービスを開始</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">;==============================================</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">TCPStartup</span><span class="S8">()</span><br>
<br>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; リスニング用"ソケット"作成</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; &nbsp;&nbsp;;   IPアドレスとポート33891を使用</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">;==============================================</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$MainSocket</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">TCPListen</span><span class="S8">(</span><span class="S9">$szIPADDRESS</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$nPORT</span><span class="S8">)</span><br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; ソケット作成に失敗したら終了</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S9">$MainSocket</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S8">-</span><span class="S3">1</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S5">Exit</span><br>
<br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; メッセージ用GUI作成</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">;==============================================</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$GOOEY</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">GUICreate</span><span class="S8">(</span><span class="S7">"My Server (IP: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$szIPADDRESS</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">")"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">300</span><span class="S8">,</span><span class="S0"> </span><span class="S3">200</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$edit</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">GUICtrlCreateEdit</span><span class="S8">(</span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S3">10</span><span class="S8">,</span><span class="S0"> </span><span class="S3">10</span><span class="S8">,</span><span class="S0"> </span><span class="S3">280</span><span class="S8">,</span><span class="S0"> </span><span class="S3">180</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">GUISetState</span><span class="S8">()</span><br>
<br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; 接続を表す変数を初期化</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">;==============================================</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$ConnectedSocket</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S8">-</span><span class="S3">1</span><br>
<br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">;待機と接続受け入れ</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">;==============================================</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Do</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$ConnectedSocket</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">TCPAccept</span><span class="S8">(</span><span class="S9">$MainSocket</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Until</span><span class="S0"> </span><span class="S9">$ConnectedSocket</span><span class="S0"> </span><span class="S8">&lt;&gt;</span><span class="S0"> </span><span class="S8">-</span><span class="S3">1</span><br>
<br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; 接続しているクライアントのIPを取得</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$szIP_Accepted</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> SocketToIP</span><span class="S8">(</span><span class="S9">$ConnectedSocket</span><span class="S8">)</span><br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; GUI メッセージループ</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">;==============================================</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">While</span><span class="S0"> </span><span class="S3">1</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$msg</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">GUIGetMsg</span><span class="S8">()</span><br>
<br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; GUIを閉じる</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">;--------------------</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S9">$msg</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S9">$GUI_EVENT_CLOSE</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S5">ExitLoop</span><br>
<br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; 最大2048byteまでの受信を試みる</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">;----------------------------------------------------------------</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$recv</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">TCPRecv</span><span class="S8">(</span><span class="S9">$ConnectedSocket</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2048</span><span class="S8">)</span><br>
<br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; @errorが"失敗"の場合、ソケットは接続していない</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">;----------------------------------------------------------------</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S5">ExitLoop</span><br>
<br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; 受信情報を元にエディットコントロールを更新</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">;----------------------------------------------------------------</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S9">$recv</span><span class="S0"> </span><span class="S8">&lt;&gt;</span><span class="S0"> </span><span class="S7">""</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S4">GUICtrlSetData</span><span class="S8">(</span><span class="S9">$edit</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$szIP_Accepted</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">" &gt; "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$recv</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S4">GUICtrlRead</span><span class="S8">(</span><span class="S9">$edit</span><span class="S8">))</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">WEnd</span><br>
<br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S9">$ConnectedSocket</span><span class="S0"> </span><span class="S8">&lt;&gt;</span><span class="S0"> </span><span class="S8">-</span><span class="S3">1</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S4">TCPCloseSocket</span><span class="S8">(</span><span class="S9">$ConnectedSocket</span><span class="S8">)</span><br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">TCPShutdown</span><span class="S8">()</span><br>
<span class="S5">EndFunc</span><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;Example</span><br>
<br>
<span class="S1">; 接続しているソケットからIPアドレスを返す関数</span><br>
<span class="S1">;----------------------------------------------------------------------</span><br>
<span class="S5">Func</span><span class="S0"> SocketToIP</span><span class="S8">(</span><span class="S9">$SHOCKET</span><span class="S8">)</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$sockaddr</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$aRet</span><br>
<span class="S0">&nbsp; &nbsp; </span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sockaddr</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">DllStructCreate</span><span class="S8">(</span><span class="S7">"short;ushort;uint;char[8]"</span><span class="S8">)</span><br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$aRet</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">DllCall</span><span class="S8">(</span><span class="S7">"Ws2_32.dll"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"getpeername"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SHOCKET</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"ptr"</span><span class="S8">,</span><span class="S0"> </span><span class="S4">DllStructGetPtr</span><span class="S8">(</span><span class="S9">$sockaddr</span><span class="S8">),</span><span class="S0"> </span><span class="S7">"int*"</span><span class="S8">,</span><span class="S0"> </span><span class="S4">DllStructGetSize</span><span class="S8">(</span><span class="S9">$sockaddr</span><span class="S8">))</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S5">Not</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S5">And</span><span class="S0"> </span><span class="S9">$aRet</span><span class="S8">[</span><span class="S3">0</span><span class="S8">]</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><span class="S5">Then</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$aRet</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">DllCall</span><span class="S8">(</span><span class="S7">"Ws2_32.dll"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"str"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"inet_ntoa"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S4">DllStructGetData</span><span class="S8">(</span><span class="S9">$sockaddr</span><span class="S8">,</span><span class="S0"> </span><span class="S3">3</span><span class="S8">))</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S5">Not</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S9">$aRet</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S9">$aRet</span><span class="S8">[</span><span class="S3">0</span><span class="S8">]</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Else</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$aRet</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S3">0</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">EndIf</span><br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sockaddr</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S3">0</span><br>
<br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Return</span><span class="S0"> </span><span class="S9">$aRet</span><br>
<span class="S5">EndFunc</span><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;SocketToIP</span></span><br>
<script type="text/javascript">

if (document.URL.match(/^mk:@MSITStore:/i))
document.write('<br><OBJECT id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11" width=58 height=57><PARAM name="Command" value="ShortCut"><PARAM name="Button" value="Text:Open this Script"><PARAM name="Item1" value=",Examples\\HelpFile\\TCPRecv.au3,"></OBJECT>');
</script>
<p>&nbsp;</p>

</body>
</html>
