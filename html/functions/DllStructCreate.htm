<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Function DllStructCreate</title>
  <meta http-equiv="Content-Type" content="text/html; charset=shift_jis">
  <link href="../css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1>Function Reference</h1>
<font size="+1">DllStructCreate</font>
<hr size="2">
<p>DllCallで使用するためのC/C++スタイルの構造体を作成します。<br></p>

<p class="codeheader">
DllStructCreate ( "Struct" [,Pointer] )<br>
</p>
<p>&nbsp;</p>

<p><b>パラメータ</b></p>
<table border="1" width="100%" cellspacing="0" cellpadding="3" bordercolor="#C0C0C0">
  <tr>
    <td width="15%">"Struct"</td>
    <td width="85%">作成する構造体を表す文字列(注意を参照)。</td>
  </tr>
  <tr>
   <td>Pointer</td>
   <td><b>[オプション]</b>使用した場合、構造体にメモリが割り当てられるかわりにポインタが使用されます。</td>
  </tr>
</table>
<p>&nbsp;</p>

<p><b>返し値</b></p>
<table width="100%">
  <tr>
    <td width="10%" valign="top">成功</td>
    <td width="90%">DllStruct系の関数で使用できる変数。</td>
  </tr>
  <tr>
    <td valign="top">失敗</td>
    <td>0</td>
  </tr>
  <tr>
    <td valign="top">@Error:</td>
    <td>0 = エラーなし。</td>
  </tr>
  <tr>
    <td valign="top"></td>
    <td>1 = DllStructCreateに渡された変数が文字列でない。</td>
  </tr>
  <tr>
    <td valign="top"></td>
    <td>2 = 渡された文字列が表すデータ型が不正。</td>
  </tr>
  <tr>
    <td valign="top"></td>
    <td>3 = 構造体へのメモリ割り当てに失敗、もしくはPointer = 0。</td>
  </tr>
  <tr>
    <td valign="top"></td>
    <td>4 = 渡された文字列へのメモリ割り当てエラー。</td>
  </tr>
</table><br><br>
<table border="1" width="100%" cellspacing="0" cellpadding="3" bordercolor="#C0C0C0">
  <tr>
    <td width="15%"><b>型</b></td>
    <td width="85%"><b>詳細</b></td>
  </tr>
  <tr>
   <td>BYTE</td>
   <td>8ビット(1バイト)符号なし文字</td>
  </tr>
  <tr>
   <td>BOOLEAN</td>
   <td>8ビット(1バイト)符号なし文字</td>
  </tr>
  <tr>
   <td>CHAR</td>
   <td>8ビット(1バイト)ASCII文字</td>
  </tr>
  <tr>
   <td>WCHAR</td>
   <td>16ビット(2バイト)UNICODEワイド文字</td>
  </tr>  
  <tr>
   <td>short</td>
   <td>16ビット(2バイト)符号付き整数</td>
  </tr>
  <tr>
	<td>USHORT</td>
   <td>16ビット(2バイト)符号なし整数</td>
  </tr>
  <tr>
   <td>WORD</td>
   <td>16ビット(2バイト)符号なし整数</td>
  </tr>
  <tr>
   <td>int</td>
   <td>32ビット(4バイト)符号付き整数</td>
  </tr>
  <tr>
   <td>long</td>
   <td>32ビット(4バイト)符号付き整数</td>
  </tr>
  <tr>
   <td>BOOL</td>
   <td>32ビット(4バイト)符号付き整数</td>
  </tr>
  <tr>
   <td>UINT</td>
   <td>32ビット(4バイト)符号なし整数</td>
  </tr>
  <tr>
   <td>ULONG</td>
   <td>32ビット(4バイト)符号なし整数</td>
  </tr>
  <tr>
   <td>DWORD</td>
   <td>32ビット(4バイト)符号なし整数</td>
  </tr>
  <tr>
   <td>INT64</td>
   <td>64ビット(8バイト)符号付き整数</td>
  </tr>
  <tr>
   <td>UINT64</td>
   <td>64ビット(8バイト)符号なし整数</td>
  </tr>
  <tr>
  <tr>
   <td>ptr</td>
   <td>32ビットまたは64ビット符号なし整数 (x86版、x64版どちらのAutoItが使われているかに依存します)</td>
   <td>32ビット(4バイト) 整数</td>
  </tr>
  <tr>
   <td>HWND</td>
   <td>32ビット(4バイト) 整数</td>
  </tr>
  <tr>
   <td>HANDLE</td>
   <td>32ビット(4バイト) 整数</td>
  </tr>  
  <tr>
   <td>float</td>
   <td>32ビット(4バイト)浮動小数点</td>
  </tr>
  <tr>
   <td>double</td>
   <td>64ビット(8バイト)浮動小数点</td>
  </tr>
  <tr>
   <td>INT_PTR, LONG_PTR, LRESULT, LPARAM</td>
   <td>32ビットまたは64ビット符号付き整数 (x86版、x64版どちらのAutoItが使われているかに依存します)</td>
  </tr>
  <tr>
   <td>UINT_PTR, ULONG_PTR, DWORD_PTR, WPARAM</td>
   <td>32ビットまたは64ビット符号なし整数 (x86版、x64版どちらのAutoItが使われているかに依存します)</td>
  </tr>  
</table><br>

<p><b>注意</b></p>
各データ型はセミコロン ';' で区切られていなければなりません。<br>
<br>
配列を作成する場合はデータ型の後ろに'[サイズ]'をつけます。例：DllStructCreate("int;char[128]")<br>
<br>
C-スタイルの宣言と同じように要素名を追加することができます。例：DllStructCreate("int n;char buffer[128]")<br>
このデータ名は他のDllStruct...関数の要素名として使用できます。データ名にはアルファベットと下線が使用できます。<br>
<br>
構造体で異なるアライメントの接頭辞を使用するにはalignキーワードを使用します。
nのデフォルト値は8です。有効な値は1、2、4、8、16です。
メンバーのアライメントは境界上になり、これはnの倍数またはメンバーのサイズの倍数の<b>小さい方になります</b>。
これはMicrosoft Visual C++ コンパイラの#pragma pack オプションと同じです。<br>
<br>
DllStructCreate("short;int")     ; 構造体は8バイト。"int"は4バイトオフセットされる。<br>
DllStructCreate("align 2;short;int")     ; 構造体は6バイト。"int"は2バイトオフセットされる。<br>
<br>
DllStructCreate("byte;double")     ; 構造体は16バイト。"double"は8バイトオフセットされる。<br>
DllStructCreate("align 4;byte;double")     ; 構造体は12バイト。"double"は4バイトオフセットされる。<br>
<br>
アライメントの変更が必要な場合には変更が必要な最初の要素の前で"align"を使用します。<br>
"align"または"align 8"とするとデフォルトのアライメントになります。<br>
<br>
割り当てられたメモリを解放するには返された変数に0を代入してください。<br>
<br>
<p>&nbsp;</p>

<p><b>関連</b></p>
<a href="DllCall.htm">DllCall</a>, <a href="DllStructGetData.htm">DllStructGetData</a>, <a href="DllStructSetData.htm">DllStructSetData</a>, <a href="DllStructGetPtr.htm">DllStructGetPtr</a>, <a href="DllStructGetSize.htm">DllStructGetSize</a>, <a href="IsDllStruct.htm">IsDllStruct</a>
<p>&nbsp;</p>

<p><b>例</b></p>
<p class="codebox">
<br>
<span><span class="S1">;=========================================================</span><br>
<span class="S1">;&nbsp; &nbsp;構造体作成</span><br>
<span class="S1">;&nbsp; &nbsp;struct {</span><br>
<span class="S1">;&nbsp; &nbsp;&nbsp; &nbsp; int&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var1;</span><br>
<span class="S1">;&nbsp; &nbsp;&nbsp; &nbsp; unsigned char&nbsp; &nbsp;var2;</span><br>
<span class="S1">;&nbsp; &nbsp;&nbsp; &nbsp; unsigned int&nbsp; &nbsp; var3;</span><br>
<span class="S1">;&nbsp; &nbsp;&nbsp; &nbsp; char&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var4[128];</span><br>
<span class="S1">;&nbsp; &nbsp;}</span><br>
<span class="S1">;=========================================================</span><br>
<span class="S9">$str</span><span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S8">=</span><span class="S0"> </span><span class="S7">"int var1;ubyte var2;uint var3;char var4[128]"</span><br>
<span class="S9">$a</span><span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S8">=</span><span class="S0"> </span><span class="S4">DllStructCreate</span><span class="S8">(</span><span class="S9">$str</span><span class="S8">)</span><br>
<span class="S5">if</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S5">Then</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">0</span><span class="S8">,</span><span class="S7">""</span><span class="S8">,</span><span class="S7">"Error in DllStructCreate "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@error</span><span class="S8">)</span><span class="S1">;</span><br>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">exit</span><br>
<span class="S5">endif</span><br>
<br>
<span class="S1">;=========================================================</span><br>
<span class="S1">;&nbsp; &nbsp;構造体にデータを設定</span><br>
<span class="S1">;&nbsp; &nbsp;struct.var1&nbsp;= -1;</span><br>
<span class="S1">;&nbsp; &nbsp;struct.var2&nbsp;= 255;</span><br>
<span class="S1">;&nbsp; &nbsp;struct.var3&nbsp;= INT_MAX; -1 は(unsigned int に)型キャストされる</span><br>
<span class="S1">;&nbsp; &nbsp;strcpy(struct.var4,"Hello");</span><br>
<span class="S1">;&nbsp; &nbsp;struct.var4[0]&nbsp; = 'h';</span><br>
<span class="S1">;=========================================================</span><br>
<span class="S4">DllStructSetData</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S7">"var1"</span><span class="S8">,-</span><span class="S3">1</span><span class="S8">)</span><br>
<span class="S4">DllStructSetData</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S7">"var2"</span><span class="S8">,</span><span class="S3">255</span><span class="S8">)</span><br>
<span class="S4">DllStructSetData</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S7">"var3"</span><span class="S8">,-</span><span class="S3">1</span><span class="S8">)</span><br>
<span class="S4">DllStructSetData</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S7">"var4"</span><span class="S8">,</span><span class="S7">"Hello"</span><span class="S8">)</span><br>
<span class="S4">DllStructSetData</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S7">"var4"</span><span class="S8">,</span><span class="S4">Asc</span><span class="S8">(</span><span class="S7">"h"</span><span class="S8">),</span><span class="S3">1</span><span class="S8">)</span><br>
<br>
<span class="S1">;=========================================================</span><br>
<span class="S1">;&nbsp; &nbsp;構造体の情報を表示</span><br>
<span class="S1">;=========================================================</span><br>
<span class="S4">MsgBox</span><span class="S8">(</span><span class="S3">0</span><span class="S8">,</span><span class="S7">"DllStruct"</span><span class="S8">,</span><span class="S7">"Struct Size: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S4">DllStructGetSize</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"Struct pointer: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S4">DllStructGetPtr</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"Data:"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S4">DllStructGetData</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S3">1</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S4">DllStructGetData</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S3">2</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S4">DllStructGetData</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S3">3</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span><br>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S4">DllStructGetData</span><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S3">4</span><span class="S8">))</span><br>
<br>
<span class="S1">;=========================================================</span><br>
<span class="S1">;&nbsp; &nbsp; 必要な場合、構造体に割り当てられたメモリを解放</span><br>
<span class="S1">;=========================================================</span><br>
<span class="S9">$a</span><span class="S8">=</span><span class="S3">0</span><br>
<span class="S0"></span></span><br>
<script type="text/javascript">

if (document.URL.match(/^mk:@MSITStore:/i))
document.write('<br><OBJECT id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11" width=58 height=57><PARAM name="Command" value="ShortCut"><PARAM name="Button" value="Text:Open this Script"><PARAM name="Item1" value=",Examples\\HelpFile\\DllStructCreate.au3,"></OBJECT>');
</script>
<p>&nbsp;</p>

</body>
</html>
